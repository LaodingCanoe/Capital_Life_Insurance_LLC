<Application x:Class="Capital_Life_Insurance_LLC.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Capital_Life_Insurance_LLC"
             StartupUri="MainWindow.xaml">

    <Application.Resources>
        <FontFamily x:Key="HelveticaBolt">/Capital_Life_Insurance_LLC;component/Fonts/#helvetica_bold</FontFamily>
        <FontFamily x:Key="HelveticaFont">/Capital_Life_Insurance_LLC;component/Fonts/#helvetica_regular</FontFamily>
        <Style x:Key="AccentButton" TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="1"
                                CornerRadius="15">
                            <ContentPresenter HorizontalAlignment="Center" 
                                              VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Background" Value="#0B57D0"/>
            <Setter Property="BorderBrush" Value="#0B57D0"/>
            <Setter Property="Padding" Value="10,5"/>
            <Setter Property="FontFamily" Value="HelveticaBolt"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Foreground" Value="White"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#0E4EB5"/>
                    <!-- Изменение цвета фона при наведении -->
                    <Setter Property="BorderBrush" Value="#0E4EB5"/>
                    <!-- Изменение цвета границы при наведении -->
                    <Setter Property="Foreground" Value="#F0FAFB"/>
                    <!-- Изменение цвета текста при наведении -->
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="#A9A9A9"/>
                    <Setter Property="BorderBrush" Value="#A9A9A9"/>
                    <Setter Property="Foreground" Value="#D3D3D3"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="RegularButton" TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="1"
                                CornerRadius="15">
                            <ContentPresenter HorizontalAlignment="Center" 
                                              VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="White"/>
            <Setter Property="Padding" Value="10,5"/>
            <Setter Property="FontFamily" Value="HelveticaBolt"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Foreground" Value="#0B57D0"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#F5F8FD"/>
                    <!-- Изменение цвета фона при наведении -->
                    <Setter Property="BorderBrush" Value="#F5F8FD"/>
                    <!-- Изменение цвета границы при наведении -->
                    <Setter Property="Foreground" Value="#0B57D2"/>
                    <!-- Изменение цвета текста при наведении -->
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="RoundButton" TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="1"
                            CornerRadius="25">
                            <!-- Установите CornerRadius на половину высоты и ширины -->
                            <ContentPresenter HorizontalAlignment="Center" 
                                          VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="White"/>
            <Setter Property="Padding" Value="10"/>
            <Setter Property="FontSize" Value="10"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Width" Value="50"/>
            <Setter Property="Height" Value="50"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#F5F8FD"/>
                    <!-- Изменение цвета фона при наведении -->
                    <Setter Property="BorderBrush" Value="#F5F8FD"/>
                    <!-- Изменение цвета границы при наведении -->
                    <Setter Property="Foreground" Value="#0B57D2"/>
                    <!-- Изменение цвета текста при наведении -->
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="RadioButtonForTest" TargetType="RadioButton">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="RadioButton">
                            <Grid Width="50" Height="50">
                                <Border Name="Border"
                                    BorderBrush="Black"
                                    BorderThickness="2"
                                    Background="White"
                                    Width="50"
                                    Height="50">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                                <Path Name="CheckMark"
                                  Data="M 12,25 L 20,33 L 38,15"
                                  Stroke="Transparent"
                                  StrokeThickness="5"
                                  StrokeEndLineCap="Round"
                                  StrokeStartLineCap="Round"
                                  StrokeLineJoin="Round"
                                  Visibility="Hidden"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  Stretch="Uniform"
                                  Width="30"
                                  Height="30"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="true">
                                    <Setter TargetName="Border" Property="Background" Value="#0B57D0"/>
                                    <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
                                    <Setter TargetName="CheckMark" Property="Stroke" Value="White"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
        </Style>
        <Style TargetType="ListBoxItem">
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="Background" Value="Transparent" />
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="#0B57D0" />
                    <Setter Property="Foreground" Value="Green" />
                    <Setter Property="Background" Value="Green" />
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="White" />
                    <Setter Property="Foreground" Value="#0B57D0" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </Application.Resources>

</Application>
